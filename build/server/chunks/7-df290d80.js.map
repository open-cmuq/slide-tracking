{"version":3,"file":"7-df290d80.js","sources":["../../../.svelte-kit/adapter-node/entries/pages/(logged-in)/coverslip/_coverslipId_/staining/_page.server.js","../../../.svelte-kit/adapter-node/nodes/7.js"],"sourcesContent":["import { b as newStainingSchema, e as editStainingSchema, d as deleteEntrySchema } from \"../../../../../../chunks/forms.js\";\nimport { f as fail, e as error } from \"../../../../../../chunks/index.js\";\nimport { a as redirectDifferentRoute, r as redirectSameRoute } from \"../../../../../../chunks/redirect.js\";\nimport { nanoid } from \"nanoid\";\nimport { p as prisma } from \"../../../../../../chunks/index4.js\";\nimport { q } from \"../../../../../../chunks/index5.js\";\nasync function load(event) {\n  const { locals, params: { coverslipId } } = event;\n  const [breadcrumbs, stainings] = await Promise.all([\n    coverslipBreadcrumbs(coverslipId),\n    prisma.staining.findMany({\n      where: {\n        coverslipId,\n        createdByUserId: locals.user.id\n      },\n      include: {\n        fields: true\n      }\n    })\n  ]);\n  return { breadcrumbs, stainings };\n}\nasync function coverslipBreadcrumbs(coverslipId) {\n  const [breadcrumbTrail] = await prisma.$queryRaw`\n\t\tSELECT\n\t\t\tp.id AS projectId,\n\t\t\te.id AS experimentId,\n\t\t\ts.id AS slideId,\n\t\t\tc.id AS coverslipId\n\t\tFROM Coverslip c\n\t\tJOIN Slide s ON s.id = c.slideId\n\t\tJOIN Experiment e ON e.id = s.experimentId\n\t\tJOIN Project p ON p.id = e.projectId\n\t\tWHERE c.id = ${coverslipId};\n\t`;\n  return q.breadcrumbs.findAll(breadcrumbTrail);\n}\nconst actions = {\n  async new(event) {\n    const user = event.locals.user;\n    if (!user) {\n      console.log(\"User not logged in\");\n      return fail(401, { formErrors: [\"Please sign in\"] });\n    }\n    const formData = await event.request.formData();\n    const coverslipId = formData.get(\"coverslipId\");\n    const stainingFields = Array.from(formData.entries()).filter(([key]) => key.startsWith(\"fields\")).map(([key, value]) => {\n      const match = key.match(/fields\\[(\\d+)\\]\\[(\\w+)\\]/);\n      if (!match) {\n        throw error(400, \"Invalid field values\");\n      }\n      const [, index, field] = match;\n      return { index: Number(index), field, value };\n    }).reduce(\n      (acc, { index, field, value }) => {\n        acc[index] = acc[index] || {};\n        acc[index][field] = value;\n        return acc;\n      },\n      /** @type {Record<string, any>[]}*/\n      []\n    );\n    const stainingParse = newStainingSchema.safeParse({\n      coverslipId,\n      fields: stainingFields\n    });\n    if (!stainingParse.success) {\n      return fail(400, stainingParse.error.formErrors);\n    }\n    prisma.staining.create({\n      data: {\n        ...stainingParse.data,\n        fields: {\n          create: stainingParse.data.fields.map((field) => ({\n            ...field,\n            id: nanoid(),\n            createdByUserId: user.id\n          }))\n        },\n        id: nanoid(),\n        createdByUserId: user.id\n      }\n    }).then((staining) => {\n      console.log(\"New staining created!\");\n    }).catch((error2) => {\n      console.error(error2);\n      return fail(400, error2);\n    });\n    redirectDifferentRoute(event, `/coverslip/${coverslipId}/staining`);\n  },\n  async edit(event) {\n    const { locals, request } = event;\n    let formData;\n    await request.formData().then((data) => {\n      formData = data;\n    }).catch((error2) => {\n      console.error(error2);\n      return fail(400, error2);\n    });\n    const stainingFields = [];\n    for (const [key, formDataValue] of formData) {\n      if (!key.startsWith(\"fields\"))\n        continue;\n      const match = key.match(/fields\\[(\\d+)\\]\\[(\\w+)\\]/);\n      if (!match)\n        throw error(400, \"Invalid field values\");\n      const index = Number(match[1]);\n      const field = (\n        /** @type {'name' | 'value'} */\n        match[2]\n      );\n      stainingFields[index] = stainingFields[index] || {};\n      stainingFields[index][field] = /** @type {string} */\n      formDataValue;\n    }\n    const coverslipId = (\n      /** @type {string} */\n      formData.get(\"coverslipId\")\n    );\n    const id = (\n      /** @type {string} */\n      formData.get(\"id\")\n    );\n    const stainingParse = editStainingSchema.safeParse({\n      coverslipId,\n      fields: stainingFields,\n      id\n    });\n    if (!stainingParse.success) {\n      return fail(400, stainingParse.error.formErrors);\n    }\n    function isCreateField(field) {\n      return field.op === \"create\";\n    }\n    function isEditField(field) {\n      return field.op === \"edit\";\n    }\n    function isDeleteField(field) {\n      return field.op === \"delete\";\n    }\n    await prisma.staining.update({\n      where: {\n        id: stainingParse.data.id\n      },\n      data: {\n        ...stainingParse.data,\n        fields: {\n          create: stainingParse.data.fields.filter(isCreateField).map(({ op: _, ...field }) => ({\n            ...field,\n            id: nanoid(),\n            createdByUserId: locals.user.id\n          })),\n          deleteMany: stainingParse.data.fields.filter(isDeleteField).map(({ op: _, ...field }) => field)\n        },\n        id: nanoid(),\n        createdByUserId: locals.user.id\n      }\n    });\n    const toUpdate = stainingParse.data.fields.filter(isEditField).map(({ op: _, ...field }) => field);\n    for (const field of toUpdate) {\n      await prisma.stainingField.update({\n        where: { id: field.id },\n        data: field\n      });\n    }\n    redirectDifferentRoute(event, `/coverslip/${coverslipId}/staining`);\n  },\n  async delete(event) {\n    const formData = Object.fromEntries(await event.request.formData());\n    const deleteParse = deleteEntrySchema.safeParse(formData);\n    if (!deleteParse.success) {\n      return fail(400, deleteParse.error.formErrors);\n    }\n    const deletedStaining = await prisma.staining.delete({\n      where: {\n        id: deleteParse.data.id\n      }\n    });\n    redirectSameRoute(event, `/coverslip/${deletedStaining.coverslipId}`);\n  }\n};\nexport {\n  actions,\n  load\n};\n","import * as server from '../entries/pages/(logged-in)/coverslip/_coverslipId_/staining/_page.server.js';\n\nexport const index = 7;\nexport const component = async () => (await import('../entries/pages/(logged-in)/coverslip/_coverslipId_/staining/_page.svelte.js')).default;\nexport const file = '_app/immutable/entry/(logged-in)-coverslip-_coverslipId_-staining-page.svelte.cd9abc16.js';\nexport { server };\nexport const server_id = \"src/routes/(logged-in)/coverslip/[coverslipId]/staining/+page.server.js\";\nexport const imports = [\"_app/immutable/entry/(logged-in)-coverslip-_coverslipId_-staining-page.svelte.cd9abc16.js\",\"_app/immutable/chunks/index.79e82b19.js\",\"_app/immutable/chunks/coverslipTable.svelte_svelte_type_style_lang.6429d3c8.js\",\"_app/immutable/chunks/parse.d12b0d5b.js\",\"_app/immutable/chunks/singletons.d744cbe5.js\",\"_app/immutable/chunks/stainining_fields.257325a1.js\",\"_app/immutable/chunks/button-item.6bf52554.js\",\"_app/immutable/chunks/popup.dbbce627.js\",\"_app/immutable/chunks/dropdown-item.72bb262e.js\",\"_app/immutable/chunks/empty-list.ac357487.js\"];\nexport const stylesheets = [\"_app/immutable/assets/_page.65504169.css\",\"_app/immutable/assets/coverslipTable.aa708c95.css\"];\nexport const fonts = [];\n"],"names":[],"mappings":"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"}